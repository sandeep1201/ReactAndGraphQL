// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DCF.Core.Domain
{

    // AuxiliaryPayment
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.30.0.0")]
    public class AuxiliaryPayment
    {
        [Column(@"Id", Order = 1, TypeName = "int")]
        [Required]
        [Key]
        [Display(Name = "Id")]
        public int Id { get; set; } // Id (Primary key)

        [Display(Name = "Pin number")]
        public decimal? PinNumber { get; set; } // PinNumber

        [Display(Name = "Effective month")]
        public System.DateTime? EffectiveMonth { get; set; } // EffectiveMonth

        [Display(Name = "Time limit type ID")]
        public int? TimeLimitTypeId { get; set; } // TimeLimitTypeId

        [Display(Name = "State timelimit")]
        public bool? StateTimelimit { get; set; } // StateTimelimit

        [Display(Name = "Federal time limit")]
        public bool? FederalTimeLimit { get; set; } // FederalTimeLimit

        [Display(Name = "Twenty four month limit")]
        public bool? TwentyFourMonthLimit { get; set; } // TwentyFourMonthLimit

        [Display(Name = "Created date from cares")]
        public System.DateTime? CreatedDateFromCares { get; set; } = System.DateTime.Now; // CreatedDateFromCARES

        [Required]
        [MaxLength(100)]
        [StringLength(100)]
        [Display(Name = "Modified by")]
        public string ModifiedBy { get; set; } // ModifiedBy (length: 100)

        [Display(Name = "Modified date")]
        public System.DateTime? ModifiedDate { get; set; } = System.DateTime.Now; // ModifiedDate

        [Required]
        [MaxLength(8)]
        [Timestamp]
        [Display(Name = "Row version")]
        public byte[] RowVersion { get; private set; } // RowVersion (length: 8)
    }

}
// </auto-generated>
