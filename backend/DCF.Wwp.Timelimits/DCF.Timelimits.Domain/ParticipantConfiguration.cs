// <auto-generated>
// ReSharper disable ConvertPropertyToExpressionBody
// ReSharper disable DoNotCallOverridableMethodsInConstructor
// ReSharper disable InconsistentNaming
// ReSharper disable PartialMethodWithSinglePart
// ReSharper disable PartialTypeWithSinglePart
// ReSharper disable RedundantNameQualifier
// ReSharper disable RedundantOverridenMember
// ReSharper disable UseNameofExpression
// TargetFrameworkVersion = 4.5
#pragma warning disable 1591    //  Ignore "Missing XML Comment" warning

using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace DCF.Core.Domain
{

    // Participant
    [System.CodeDom.Compiler.GeneratedCode("EF.Reverse.POCO.Generator", "2.30.0.0")]
    public class ParticipantConfiguration : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<Participant>
    {
        public ParticipantConfiguration()
            : this("wwp")
        {
        }

        public ParticipantConfiguration(string schema)
        {
            ToTable("Participant", schema);
            Property(x => x.Id).HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity);
            Property(x => x.PinNumber).HasColumnName(@"PinNumber").HasColumnType("decimal").IsOptional().HasPrecision(10,0);
            Property(x => x.FirstName).HasColumnName(@"FirstName").HasColumnType("varchar").IsOptional().IsUnicode(false);
            Property(x => x.MiddleInitialName).HasColumnName(@"MiddleInitialName").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.LastName).HasColumnName(@"LastName").HasColumnType("varchar").IsOptional().IsUnicode(false);
            Property(x => x.SuffixName).HasColumnName(@"SuffixName").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DateOfBirth).HasColumnName(@"DateOfBirth").HasColumnType("date").IsOptional();
            Property(x => x.DateOfDeath).HasColumnName(@"DateOfDeath").HasColumnType("date").IsOptional();
            Property(x => x.GenderIndicator).HasColumnName(@"GenderIndicator").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.AliasResponse).HasColumnName(@"AliasResponse").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.BirthVerificationCode).HasColumnName(@"BirthVerificationCode").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.BirthPlaceCode).HasColumnName(@"BirthPlaceCode").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CitizenshipVerificationCode).HasColumnName(@"CitizenshipVerificationCode").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DclCitizenshipSwitch).HasColumnName(@"DCLCitizenshipSwitch").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DeathVerificationCode).HasColumnName(@"DeathVerificationCode").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.LanguageCode).HasColumnName(@"LanguageCode").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.MaxHistorySequenceNumber).HasColumnName(@"MaxHistorySequenceNumber").HasColumnType("smallint").IsOptional();
            Property(x => x.PrimarySsnNumber).HasColumnName(@"PrimarySSNNumber").HasColumnType("decimal").IsOptional().HasPrecision(9,0);
            Property(x => x.PseudoSsnNumber).HasColumnName(@"PseudoSSNNumber").HasColumnType("decimal").IsOptional().HasPrecision(9,0);
            Property(x => x.RaceCode).HasColumnName(@"RaceCode").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SsnAppointmentDate).HasColumnName(@"SSNAppointmentDate").HasColumnType("date").IsOptional();
            Property(x => x.SsnAppointmentVerificationCode).HasColumnName(@"SSNAppointmentVerificationCode").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.SsnValidatedCode).HasColumnName(@"SSNValidatedCode").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.CaresUpdatedDate).HasColumnName(@"CaresUpdatedDate").HasColumnType("date").IsOptional();
            Property(x => x.UsCitizenSwitch).HasColumnName(@"USCitizenSwitch").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.WorkerAlert1Code).HasColumnName(@"WorkerAlert1Code").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.WorkerAlert2Code).HasColumnName(@"WorkerAlert2Code").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.MaidNumber).HasColumnName(@"MaidNumber").HasColumnType("decimal").IsOptional().HasPrecision(10,0);
            Property(x => x.ChildElsewhereSwitch).HasColumnName(@"ChildElsewhereSwitch").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ChildVerificationCode).HasColumnName(@"ChildVerificationCode").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.AmericanIndianIndicator).HasColumnName(@"AmericanIndianIndicator").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.AsianIndicator).HasColumnName(@"AsianIndicator").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.BlackIndicator).HasColumnName(@"BlackIndicator").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.HispanicIndicator).HasColumnName(@"HispanicIndicator").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.PacificIslanderIndicator).HasColumnName(@"PacificIslanderIndicator").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.WhiteIndicator).HasColumnName(@"WhiteIndicator").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.MciId).HasColumnName(@"MCI_ID").HasColumnType("decimal").IsOptional().HasPrecision(10,0);
            Property(x => x.MaCitizenVerificationCode).HasColumnName(@"MACitizenVerificationCode").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TribeChildMemberIndicator).HasColumnName(@"TribeChildMemberIndicator").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TribeChildVerificationCode).HasColumnName(@"TribeChildVerificationCode").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TribalMemberIndicator).HasColumnName(@"TribalMemberIndicator").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.TribalMemberVerificationCode).HasColumnName(@"TribalMemberVerificationCode").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.DeathDateSourceCode).HasColumnName(@"DeathDateSourceCode").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.WorkerOverideVerificationCode).HasColumnName(@"WorkerOverideVerificationCode").HasColumnType("char").IsOptional().IsFixedLength().IsUnicode(false);
            Property(x => x.ConversionProjectDetails).HasColumnName(@"ConversionProjectDetails").HasColumnType("varchar").IsOptional().IsUnicode(false);
            Property(x => x.ConversionDate).HasColumnName(@"ConversionDate").HasColumnType("datetime").IsOptional();
            Property(x => x.IsDeleted).HasColumnName(@"IsDeleted").HasColumnType("bit");
            Property(x => x.CreatedDate).HasColumnName(@"CreatedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.ModifiedBy).HasColumnName(@"ModifiedBy").HasColumnType("varchar").IsOptional().IsUnicode(false);
            Property(x => x.ModifiedDate).HasColumnName(@"ModifiedDate").HasColumnType("datetime").IsOptional();
            Property(x => x.RowVersion).HasColumnName(@"RowVersion").HasColumnType("timestamp").IsOptional().HasDatabaseGeneratedOption(DatabaseGeneratedOption.Computed);
            Property(x => x.IsActive).HasColumnName(@"TimeLimitStatus").HasColumnType("bit").IsOptional();
        }
    }

}
// </auto-generated>
